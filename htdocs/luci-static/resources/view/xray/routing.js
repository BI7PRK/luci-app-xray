/**
 * @license
 * Copyright 2020 Xingwang Liao <kuoruan@gmail.com>
 *
 * Licensed to the public under the MIT License.
 */
"use strict";"require form";"require uci";"require xray";return L.view.extend({load:function(){return Promise.all([xray.getSections("routing_rule"),xray.getSections("routing_balancer","tag"),xray.getSections("outbound","tag")])},render:function(e){var o,t=void 0===e?[]:e,a=t[0],n=void 0===a?[]:a,r=t[1],i=void 0===r?[]:r,l=t[2],u=void 0===l?[]:l,s=new form.Map("xray","%s - %s".format(_("XRay"),_("Routing")),_("Details: %s").format('<a href="https://xtls.github.io/config/routing.html" target="_blank">RoutingObject</a>')),m=s.section(form.NamedSection,"main_routing","routing");m.anonymous=!0,m.addremove=!1,o=m.option(form.Flag,"enabled",_("Enabled")),(o=m.option(form.ListValue,"domain_strategy",_("Domain resolution strategy"))).value(""),o.value("AsIs"),o.value("IPIfNonMatch"),o.value("IPOnDemand"),(o=m.option(form.ListValue,"domain_matcher",_("Domain name matching algorithm"))).value("hybrid"),o.value("linear"),o=m.option(form.MultiValue,"rules",_("Rules"),_("Select routing rules to use"));for(var d=0,p=n;d<p.length;d++){var c=p[d];o.value(c.value,c.caption)}o=m.option(form.MultiValue,"balancers",_("Balancers"),_("Select routing balancers to use"));for(var g=0,y=i;g<y.length;g++){c=y[g];o.value(c.value,c.caption)}var f=s.section(form.GridSection,"routing_rule",_("Routing Rule"),_("Add routing rules here"));f.anonymous=!0,f.addremove=!0,f.sortable=!0,f.nodescription=!0,(o=f.option(form.Value,"alias",_("Alias"))).rmempty=!1,(o=f.option(form.ListValue,"type",_("Type"))).value("field"),(o=f.option(form.DynamicList,"domain",_("Domain"))).modalonly=!0,(o=f.option(form.DynamicList,"ip",_("IP"))).modalonly=!0,(o=f.option(form.DynamicList,"port",_("Port"))).modalonly=!0,o.datatype="or(port, portrange)",(o=f.option(form.MultiValue,"network",_("Network"))).value("tcp"),o.value("udp"),(o=f.option(form.DynamicList,"source",_("Source"))).modalonly=!0,(o=f.option(form.DynamicList,"user",_("User"))).modalonly=!0,o=f.option(form.DynamicList,"inbound_tag",_("Inbound tag")),(o=f.option(form.MultiValue,"protocol",_("Protocol"))).modalonly=!0,o.value("http"),o.value("tls"),o.value("bittorrent"),(o=f.option(form.Value,"attrs",_("Attrs"))).modalonly=!0,(o=f.option(form.ListValue,"outbound_tag",_("Outbound tag"))).value("");for(var v=0,h=u;v<h.length;v++){c=h[v];o.value(c.caption)}(o=f.option(form.ListValue,"balancer_tag",_("Balancer tag"))).depends("outbound_tag",""),o.value("");for(var b=0,L=i;b<L.length;b++){c=L[b];o.value(c.caption)}(o=f.option(form.ListValue,"domain_matcher_r",_("Domain name matching algorithm"))).value(""),o.value("hybrid"),o.value("linear");var V=s.section(form.TypedSection,"routing_balancer",_("Routing Balancer",_("Add routing balancers here")));return V.anonymous=!0,V.addremove=!0,(o=V.option(form.Value,"tag",_("Tag"))).rmempty=!1,(o=V.option(form.ListValue,"strategy_type",_("Balancer strategy"))).value("random"),o.value("leastPing"),o.value("leastLoad"),o.modalonly=!0,(o=V.option(form.Value,"probeURL",_("ProbeURL"),_("Ping destination URL. It should return 204 on success. eg: <code>%s</code>.").format("https://www.gstatic.com/generate_204"))).placeholder=_("empty use the built-in value"),o.depends("strategy_type","leastPing"),o.depends("strategy_type","leastLoad"),(o=V.option(form.Value,"probeInterval",_("ProbeInterval"))).depends("strategy_type","leastPing"),o.depends("strategy_type","leastLoad"),(o=V.option(form.Flag,"enableConcurrency",_("Enable concurrency"))).depends("strategy_type","leastPing"),(o=V.option(form.Value,"leastTimeout",_("Timeout"))).depends("strategy_type","leastLoad"),(o=V.option(form.Value,"leastSampling",_("Sampling"))).depends("strategy_type","leastLoad"),(o=V.option(form.Value,"leastConnectivity",_("Connectivity"),_("Check network connectivity URL. eg: <code>%s</code>.").format("http://connectivitycheck.platform.hicloud.com/generate_204"))).depends("strategy_type","leastLoad"),(o=V.option(form.DynamicList,"selector",_("Selector"))).depends("strategy_type","leastPing"),o.depends("strategy_type","leastLoad"),o=V.option(form.Value,"fallback_tag",_("Fallback"),_("When the balancer fails, proxy through this node.")),s.render()}});