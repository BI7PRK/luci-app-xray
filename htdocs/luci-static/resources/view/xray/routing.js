/**
 * @license
 * Copyright 2020 Xingwang Liao <kuoruan@gmail.com>
 *
 * Licensed to the public under the MIT License.
 */
"use strict";"require form";"require uci";"require xray";return L.view.extend({load:function(){return Promise.all([xray.getSections("routing_rule"),xray.getSections("routing_balancer","tag"),xray.getSections("outbound","tag")])},render:function(e){var t,o=void 0===e?[]:e,a=o[0],n=void 0===a?[]:a,r=o[1],i=void 0===r?[]:r,l=o[2],u=void 0===l?[]:l,s=new form.Map("xray","%s - %s".format(_("XRay"),_("Routing")),_("Details: %s").format('<a href="https://xtls.github.io/config/routing.html" target="_blank">RoutingObject</a>')),m=s.section(form.NamedSection,"main_routing","routing");m.anonymous=!0,m.addremove=!1,t=m.option(form.Flag,"enabled",_("Enabled")),(t=m.option(form.ListValue,"domain_strategy",_("Domain resolution strategy"))).value(""),t.value("AsIs"),t.value("IPIfNonMatch"),t.value("IPOnDemand"),(t=m.option(form.ListValue,"domain_matcher",_("Domain name matching algorithm"))).value("hybrid"),t.value("linear"),t=m.option(form.MultiValue,"rules",_("Rules"),_("Select routing rules to use"));for(var d=0,p=n;d<p.length;d++){var g=p[d];t.value(g.value,g.caption)}t=m.option(form.MultiValue,"balancers",_("Balancers"),_("Select routing balancers to use"));for(var c=0,y=i;c<y.length;c++){g=y[c];t.value(g.value,g.caption)}var v=s.section(form.GridSection,"routing_rule",_("Routing Rule"),_("Add routing rules here"));v.anonymous=!0,v.addremove=!0,v.sortable=!0,v.nodescription=!0,(t=v.option(form.Value,"alias",_("Alias"))).rmempty=!1,(t=v.option(form.ListValue,"type",_("Type"))).value("field"),(t=v.option(form.DynamicList,"domain",_("Domain"))).modalonly=!0,(t=v.option(form.DynamicList,"ip",_("IP"))).modalonly=!0,(t=v.option(form.DynamicList,"port",_("Port"))).modalonly=!0,t.datatype="or(port, portrange)",(t=v.option(form.MultiValue,"network",_("Network"))).value("tcp"),t.value("udp"),(t=v.option(form.DynamicList,"source",_("Source"))).modalonly=!0,(t=v.option(form.DynamicList,"user",_("User"))).modalonly=!0,t=v.option(form.DynamicList,"inbound_tag",_("Inbound tag")),(t=v.option(form.MultiValue,"protocol",_("Protocol"))).modalonly=!0,t.value("http"),t.value("tls"),t.value("bittorrent"),(t=v.option(form.Value,"attrs",_("Attrs"))).modalonly=!0,(t=v.option(form.ListValue,"outbound_tag",_("Outbound tag"))).value("");for(var f=0,b=u;f<b.length;f++){g=b[f];t.value(g.caption)}(t=v.option(form.ListValue,"balancer_tag",_("Balancer tag"))).depends("outbound_tag",""),t.value("");for(var h=0,L=i;h<L.length;h++){g=L[h];t.value(g.caption)}(t=v.option(form.ListValue,"domain_matcher_r",_("Domain name matching algorithm"))).value(""),t.value("hybrid"),t.value("linear");var V=s.section(form.TypedSection,"routing_balancer",_("Routing Balancer",_("Add routing balancers here")));return V.anonymous=!0,V.addremove=!0,(t=V.option(form.Value,"tag",_("Tag"))).rmempty=!1,(t=V.option(form.ListValue,"strategy_type",_("Balancer strategy"))).value("random"),t.value("leastPing"),t.value("leastLoad"),t.modalonly=!0,(t=V.option(form.Value,"probeURL",_("ProbeURL"),_("A valid URL, it will be get request to testing. eg: <code>%s</code>.").format("https://www.gstatic.com/generate_204"))).placeholder=_("empty use the built-in value"),t.depends("strategy_type","leastPing"),t.depends("strategy_type","leastLoad"),(t=V.option(form.Value,"probeInterval",_("ProbeInterval"))).depends("strategy_type","leastPing"),t.depends("strategy_type","leastLoad"),(t=V.option(form.Flag,"enableConcurrency",_("Enable concurrency"))).depends("strategy_type","leastPing"),(t=V.option(form.Value,"leastTimeout",_("Timeout"))).depends("strategy_type","leastLoad"),(t=V.option(form.Value,"leastSampling",_("Sampling"))).depends("strategy_type","leastLoad"),(t=V.option(form.Value,"leastConnectivity",_("Connectivity"),_("A valid URL, it will be get request to testing. eg: <code>%s</code>.").format("http://connectivitycheck.platform.hicloud.com/generate_204"))).depends("strategy_type","leastLoad"),(t=V.option(form.DynamicList,"selector",_("Selector"))).depends("strategy_type","leastPing"),t.depends("strategy_type","leastLoad"),s.render()}});